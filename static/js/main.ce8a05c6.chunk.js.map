{"version":3,"sources":["components/ButtonController.js","components/DisplayRandomSign.js","components/DisplayTable.js","components/App.js","index.js"],"names":["ButtonController","props","react_default","a","createElement","className","onClick","handleCreateRandomSignsClick","handleAddToTableClick","handleClearRandomSignClick","handleClearTableClick","DisplayRandomSign","randomCode","DisplayTable","table","codes","map","element","key","codesToChoose","App","state","numberOfLetters","handleClearTable","_this","setState","handleCreateRandomSigns","index","Math","floor","random","length","sign","prevState","alert","handleAddToTable","Object","toConsumableArray","push","handleClearRandomSign","components_ButtonController","this","components_DisplayRandomSign","components_DisplayTable","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"gOAqBeA,SAnBU,SAACC,GACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACEE,QAASL,EAAMM,8BADjB,uBAGAL,EAAAC,EAAAC,cAAA,UACEE,QAASL,EAAMO,uBADjB,gBAGAN,EAAAC,EAAAC,cAAA,UACEE,QAASL,EAAMQ,4BADjB,qBAGAP,EAAAC,EAAAC,cAAA,UACEE,QAASL,EAAMS,uBADjB,kBCJSC,EARW,SAACV,GACzB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMW,cCOFC,EAVM,SAACZ,GACpB,IAAMa,EAAQb,EAAMc,MAAMC,IAAI,SAAAC,GAAO,OAAIf,EAAAC,EAAAC,cAAA,MAAIc,IAAKD,GAAUA,KAE5D,OACEf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXS,ICDDK,EAAgB,mCA0EPC,6MAvEbC,MAAQ,CACNC,gBAAiB,EACjBV,WAAY,GACZG,MAAO,MAGTQ,iBAAmB,WACjBC,EAAKC,SAAS,CACZV,MAAO,QAIXW,wBAA0B,WACxB,GAAIF,EAAKH,MAAMC,gBAAkB,GAAI,CACnC,IAAIK,EAAQC,KAAKC,MAAMD,KAAKE,SAAWX,EAAcY,QACjDC,EAAOb,EAAcQ,GAEzBH,EAAKC,SAAS,SAAAQ,GAAS,MAAK,CAC1BX,gBAAiBW,EAAUX,gBAAkB,EAC7CV,WAAYqB,EAAUrB,WAAaoB,UAGrCE,MAAM,6CAIVC,iBAAmB,WACjB,GAAIX,EAAKH,MAAMC,gBAAkB,EAAG,CAClC,IAAMP,EAAKqB,OAAAC,EAAA,EAAAD,CAAOZ,EAAKH,MAAMN,OAC7BA,EAAMuB,KAAKd,EAAKH,MAAMT,YAEtBY,EAAKC,SAAS,CACZV,QACAO,gBAAiB,EACjBV,WAAY,UAGdsB,MAAM,yCAIVK,sBAAwB,WAClBf,EAAKH,MAAMC,gBAAkB,GAC/BE,EAAKC,SAAS,CACZH,gBAAiB,EACjBV,WAAY,8EAMhB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACoC,EAAD,CACE9B,sBAAuB+B,KAAKlB,iBAC5BhB,6BAA8BkC,KAAKf,wBACnClB,sBAAuBiC,KAAKN,iBAC5B1B,2BAA4BgC,KAAKF,wBAEnCrC,EAAAC,EAAAC,cAACsC,EAAD,CACE9B,WAAY6B,KAAKpB,MAAMT,aAEzBV,EAAAC,EAAAC,cAACuC,EAAD,CACE5B,MAAO0B,KAAKpB,MAAMN,gBAjEV6B,aCHlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ce8a05c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ButtonController = (props) => {\r\n  return (\r\n    <div className='button-controller'>\r\n      <button\r\n        onClick={props.handleCreateRandomSignsClick}\r\n      >Create Random Signs</button>\r\n      <button\r\n        onClick={props.handleAddToTableClick}\r\n      >Add to table</button>\r\n      <button\r\n        onClick={props.handleClearRandomSignClick}\r\n      >Clear random sign</button>\r\n      <button\r\n        onClick={props.handleClearTableClick}\r\n      >Clear table</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonController;","import React from 'react';\r\n\r\nconst DisplayRandomSign = (props) => {\r\n  return (\r\n    <div className='display-random-sign'>\r\n      <h2>{props.randomCode}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayRandomSign;","import React from 'react';\r\n\r\nconst DisplayTable = (props) => {\r\n  const table = props.codes.map(element => <li key={element}>{element}</li>)\r\n\r\n  return (\r\n    <ul className='display-table'>\r\n      {table}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default DisplayTable;","import React, { Component } from 'react';\nimport './App.css';\nimport ButtonController from './ButtonController';\nimport DisplayRandomSign from './DisplayRandomSign';\nimport DisplayTable from './DisplayTable';\n\nconst codesToChoose = 'ABCDEFGHIJKLMNOPRSTQUV0123456789';\n\nclass App extends Component {\n  state = {\n    numberOfLetters: 0,\n    randomCode: '',\n    codes: [],\n  }\n\n  handleClearTable = () => {\n    this.setState({\n      codes: [],\n    })\n  }\n\n  handleCreateRandomSigns = () => {\n    if (this.state.numberOfLetters < 10) {\n      let index = Math.floor(Math.random() * codesToChoose.length);\n      let sign = codesToChoose[index];\n\n      this.setState(prevState => ({\n        numberOfLetters: prevState.numberOfLetters + 1,\n        randomCode: prevState.randomCode + sign,\n      }));\n    } else {\n      alert('You have reached max number of a signs');\n    }\n  }\n\n  handleAddToTable = () => {\n    if (this.state.numberOfLetters > 0) {\n      const codes = [...this.state.codes];\n      codes.push(this.state.randomCode);\n\n      this.setState({\n        codes,\n        numberOfLetters: 0,\n        randomCode: ''\n      })\n    } else {\n      alert('You need to have at least one sign');\n    }\n  }\n\n  handleClearRandomSign = () => {\n    if (this.state.numberOfLetters > 0) {\n      this.setState({\n        numberOfLetters: 0,\n        randomCode: '',\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h2>Add random signs app</h2>\n        <ButtonController\n          handleClearTableClick={this.handleClearTable}\n          handleCreateRandomSignsClick={this.handleCreateRandomSigns}\n          handleAddToTableClick={this.handleAddToTable}\n          handleClearRandomSignClick={this.handleClearRandomSign}\n        />\n        <DisplayRandomSign\n          randomCode={this.state.randomCode}\n        />\n        <DisplayTable\n          codes={this.state.codes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}